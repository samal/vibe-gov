version: '3.8'
services:
  postgres:
    image: postgres:16
    container_name: lineage_postgres
    environment:
      - POSTGRES_USER=lineage
      - POSTGRES_PASSWORD=lineage
      - POSTGRES_DB=lineage
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U lineage']
      interval: 10s
      timeout: 5s
      retries: 5

  mysql:
    image: mysql:8.0
    container_name: lineage_mysql
    environment:
      - MYSQL_ROOT_PASSWORD=lineage123
      - MYSQL_DATABASE=lineage
      - MYSQL_USER=lineage
      - MYSQL_PASSWORD=lineage
    ports:
      - '3306:3306'
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'lineage', '-plineage']
      interval: 10s
      timeout: 5s
      retries: 5

  neo4j:
    image: neo4j:5
    container_name: lineage_neo4j
    environment:
      - NEO4J_AUTH=neo4j/lineage123
      - NEO4J_dbms_security_auth__enabled=true
    ports:
      - '7474:7474' # HTTP
      - '7687:7687' # Bolt
    volumes:
      - neo4j_data:/data

  kafka:
    image: bitnami/kafka:3.7
    container_name: lineage_kafka
    ports:
      - '9092:9092'
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@localhost:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka_data:/bitnami/kafka
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list"]
      interval: 30s
      timeout: 5s
      retries: 5

  connectors:
    build: ./services/connectors
    container_name: lineage_connectors
    depends_on:
      postgres:
        condition: service_healthy
      mysql:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      - PORT=3001
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_USER=lineage
      - MYSQL_PASSWORD=lineage
      - MYSQL_DATABASE=lineage
    ports:
      - '3001:3001'

  ingestion:
    build: ./services/ingestion
    container_name: lineage_ingestion
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      - PORT=3002
    ports:
      - '3002:3002'

  lineage_api:
    build: ./services/lineage-api
    container_name: lineage_lineage_api
    depends_on:
      neo4j:
        condition: service_started
    environment:
      - PORT=3003
    ports:
      - '3003:3003'

  governance:
    build: ./services/governance
    container_name: lineage_governance
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - PORT=3004
    ports:
      - '3004:3004'

  web-ui:
    build: ./services/web-ui
    container_name: lineage_web_ui
    depends_on:
      governance:
        condition: service_started
      lineage_api:
        condition: service_started
    ports:
      - '3005:3005'

volumes:
  postgres_data:
  mysql_data:
  neo4j_data:
  kafka_data: 